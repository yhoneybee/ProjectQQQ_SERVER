




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

namespace C2S
{
    public class Proxy : Nettention.Proud.RmiProxy
    {
        public bool SignUp(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id, string pw, string confirmPw)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.SignUp;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, pw);
            Nettention.Proud.Marshaler.Write(__msg, confirmPw);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_SignUp, Common.SignUp);
        }

        public bool SignUp(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id, string pw, string confirmPw)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.SignUp;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, pw);
            Nettention.Proud.Marshaler.Write(__msg, confirmPw);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_SignUp, Common.SignUp);
        }
        public bool LogIn(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id, string pw)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.LogIn;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, pw);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_LogIn, Common.LogIn);
        }

        public bool LogIn(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id, string pw)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.LogIn;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, pw);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_LogIn, Common.LogIn);
        }
        public bool ChatToAll(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id, string chat)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.ChatToAll;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, chat);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_ChatToAll, Common.ChatToAll);
        }

        public bool ChatToAll(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id, string chat)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.ChatToAll;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, chat);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_ChatToAll, Common.ChatToAll);
        }
        public bool ChatToRoom(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id, string roomId, string chat)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.ChatToRoom;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, roomId);
            Nettention.Proud.Marshaler.Write(__msg, chat);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_ChatToRoom, Common.ChatToRoom);
        }

        public bool ChatToRoom(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id, string roomId, string chat)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.ChatToRoom;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, roomId);
            Nettention.Proud.Marshaler.Write(__msg, chat);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_ChatToRoom, Common.ChatToRoom);
        }
        public bool ChatToPerson(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id, string personId, string chat)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.ChatToPerson;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, personId);
            Nettention.Proud.Marshaler.Write(__msg, chat);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_ChatToPerson, Common.ChatToPerson);
        }

        public bool ChatToPerson(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id, string personId, string chat)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.ChatToPerson;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, personId);
            Nettention.Proud.Marshaler.Write(__msg, chat);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_ChatToPerson, Common.ChatToPerson);
        }
        public bool CreateRoom(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id, string roomName, string pw)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.CreateRoom;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, roomName);
            Nettention.Proud.Marshaler.Write(__msg, pw);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_CreateRoom, Common.CreateRoom);
        }

        public bool CreateRoom(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id, string roomName, string pw)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.CreateRoom;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, roomName);
            Nettention.Proud.Marshaler.Write(__msg, pw);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_CreateRoom, Common.CreateRoom);
        }
        public bool GetRoomDatas(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.GetRoomDatas;
            __msg.Write(__msgid);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_GetRoomDatas, Common.GetRoomDatas);
        }

        public bool GetRoomDatas(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.GetRoomDatas;
            __msg.Write(__msgid);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_GetRoomDatas, Common.GetRoomDatas);
        }
        public bool GameReady(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.GameReady;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_GameReady, Common.GameReady);
        }

        public bool GameReady(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.GameReady;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_GameReady, Common.GameReady);
        }
        public bool GameStart(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.GameStart;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_GameStart, Common.GameStart);
        }

        public bool GameStart(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.GameStart;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_GameStart, Common.GameStart);
        }
        public bool RecordPosition(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id, float x, float y, float z)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.RecordPosition;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, x);
            Nettention.Proud.Marshaler.Write(__msg, y);
            Nettention.Proud.Marshaler.Write(__msg, z);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_RecordPosition, Common.RecordPosition);
        }

        public bool RecordPosition(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id, float x, float y, float z)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.RecordPosition;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, x);
            Nettention.Proud.Marshaler.Write(__msg, y);
            Nettention.Proud.Marshaler.Write(__msg, z);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_RecordPosition, Common.RecordPosition);
        }

#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_SignUp="SignUp";
public const string RmiName_LogIn="LogIn";
public const string RmiName_ChatToAll="ChatToAll";
public const string RmiName_ChatToRoom="ChatToRoom";
public const string RmiName_ChatToPerson="ChatToPerson";
public const string RmiName_CreateRoom="CreateRoom";
public const string RmiName_GetRoomDatas="GetRoomDatas";
public const string RmiName_GameReady="GameReady";
public const string RmiName_GameStart="GameStart";
public const string RmiName_RecordPosition="RecordPosition";
       
public const string RmiName_First = RmiName_SignUp;
#else
        // RMI name declaration.
        // It is the unique pointer that indicates RMI name such as RMI profiler.
        public const string RmiName_SignUp = "";
        public const string RmiName_LogIn = "";
        public const string RmiName_ChatToAll = "";
        public const string RmiName_ChatToRoom = "";
        public const string RmiName_ChatToPerson = "";
        public const string RmiName_CreateRoom = "";
        public const string RmiName_GetRoomDatas = "";
        public const string RmiName_GameReady = "";
        public const string RmiName_GameStart = "";
        public const string RmiName_RecordPosition = "";

        public const string RmiName_First = "";
#endif

        public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; }
    }
}
namespace S2C
{
    public class Proxy : Nettention.Proud.RmiProxy
    {
        public bool SignUpResult(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id, bool isSuccess)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.SignUpResult;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, isSuccess);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_SignUpResult, Common.SignUpResult);
        }

        public bool SignUpResult(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id, bool isSuccess)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.SignUpResult;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, isSuccess);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_SignUpResult, Common.SignUpResult);
        }
        public bool LoginResult(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id, bool isSuccess)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.LoginResult;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, isSuccess);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_LoginResult, Common.LoginResult);
        }

        public bool LoginResult(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id, bool isSuccess)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.LoginResult;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, isSuccess);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_LoginResult, Common.LoginResult);
        }
        public bool EchoToAll(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id, string chat)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.EchoToAll;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, chat);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_EchoToAll, Common.EchoToAll);
        }

        public bool EchoToAll(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id, string chat)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.EchoToAll;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, chat);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_EchoToAll, Common.EchoToAll);
        }
        public bool EchoToRoom(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id, string roomId, string chat)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.EchoToRoom;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, roomId);
            Nettention.Proud.Marshaler.Write(__msg, chat);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_EchoToRoom, Common.EchoToRoom);
        }

        public bool EchoToRoom(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id, string roomId, string chat)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.EchoToRoom;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, roomId);
            Nettention.Proud.Marshaler.Write(__msg, chat);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_EchoToRoom, Common.EchoToRoom);
        }
        public bool EchoToPerson(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id, string personId, string chat)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.EchoToPerson;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, personId);
            Nettention.Proud.Marshaler.Write(__msg, chat);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_EchoToPerson, Common.EchoToPerson);
        }

        public bool EchoToPerson(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id, string personId, string chat)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.EchoToPerson;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, personId);
            Nettention.Proud.Marshaler.Write(__msg, chat);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_EchoToPerson, Common.EchoToPerson);
        }
        public bool CreateRoomResult(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id, string roomName, bool isSuccess)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.CreateRoomResult;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, roomName);
            Nettention.Proud.Marshaler.Write(__msg, isSuccess);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_CreateRoomResult, Common.CreateRoomResult);
        }

        public bool CreateRoomResult(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id, string roomName, bool isSuccess)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.CreateRoomResult;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, roomName);
            Nettention.Proud.Marshaler.Write(__msg, isSuccess);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_CreateRoomResult, Common.CreateRoomResult);
        }
        public bool GetRoomDatas(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string json)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.GetRoomDatas;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, json);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_GetRoomDatas, Common.GetRoomDatas);
        }

        public bool GetRoomDatas(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string json)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.GetRoomDatas;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, json);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_GetRoomDatas, Common.GetRoomDatas);
        }
        public bool GameReadyReflection(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.GameReadyReflection;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_GameReadyReflection, Common.GameReadyReflection);
        }

        public bool GameReadyReflection(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.GameReadyReflection;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_GameReadyReflection, Common.GameReadyReflection);
        }
        public bool GameStartReflection(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.GameStartReflection;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_GameStartReflection, Common.GameStartReflection);
        }

        public bool GameStartReflection(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.GameStartReflection;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_GameStartReflection, Common.GameStartReflection);
        }
        public bool PositionReflection(Nettention.Proud.HostID remote, Nettention.Proud.RmiContext rmiContext, string id, float x, float y, float z)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.PositionReflection;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, x);
            Nettention.Proud.Marshaler.Write(__msg, y);
            Nettention.Proud.Marshaler.Write(__msg, z);

            Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
            __list[0] = remote;

            return RmiSend(__list, rmiContext, __msg,
                RmiName_PositionReflection, Common.PositionReflection);
        }

        public bool PositionReflection(Nettention.Proud.HostID[] remotes, Nettention.Proud.RmiContext rmiContext, string id, float x, float y, float z)
        {
            Nettention.Proud.Message __msg = new Nettention.Proud.Message();
            __msg.SimplePacketMode = core.IsSimplePacketMode();
            Nettention.Proud.RmiID __msgid = Common.PositionReflection;
            __msg.Write(__msgid);
            Nettention.Proud.Marshaler.Write(__msg, id);
            Nettention.Proud.Marshaler.Write(__msg, x);
            Nettention.Proud.Marshaler.Write(__msg, y);
            Nettention.Proud.Marshaler.Write(__msg, z);

            return RmiSend(remotes, rmiContext, __msg,
                RmiName_PositionReflection, Common.PositionReflection);
        }

#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_SignUpResult="SignUpResult";
public const string RmiName_LoginResult="LoginResult";
public const string RmiName_EchoToAll="EchoToAll";
public const string RmiName_EchoToRoom="EchoToRoom";
public const string RmiName_EchoToPerson="EchoToPerson";
public const string RmiName_CreateRoomResult="CreateRoomResult";
public const string RmiName_GetRoomDatas="GetRoomDatas";
public const string RmiName_GameReadyReflection="GameReadyReflection";
public const string RmiName_GameStartReflection="GameStartReflection";
public const string RmiName_PositionReflection="PositionReflection";
       
public const string RmiName_First = RmiName_SignUpResult;
#else
        // RMI name declaration.
        // It is the unique pointer that indicates RMI name such as RMI profiler.
        public const string RmiName_SignUpResult = "";
        public const string RmiName_LoginResult = "";
        public const string RmiName_EchoToAll = "";
        public const string RmiName_EchoToRoom = "";
        public const string RmiName_EchoToPerson = "";
        public const string RmiName_CreateRoomResult = "";
        public const string RmiName_GetRoomDatas = "";
        public const string RmiName_GameReadyReflection = "";
        public const string RmiName_GameStartReflection = "";
        public const string RmiName_PositionReflection = "";

        public const string RmiName_First = "";
#endif

        public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; }
    }
}

